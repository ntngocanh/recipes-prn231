@model BusinessObjects.DTO.RecipeDTO
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Details";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="~/css/detailsRecipe.css" />
<link rel="stylesheet" href="~/css/avatar.css" />

<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <nav class="navbar">
            <button class="btn btn-sm btn-outline-success" type="button" id="backBtn">Quay lại</button>
            <div class="nav-item dropdown">
                @if (ViewData["userId"] != null && (int)ViewData["userId"] == Model.UserId)
                {
                    <button type="button" class="btn btn-warning" id="edit-btn">Sửa</button>
                    <span class="clickable deleteRecipe" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</span>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <span id="delete-recipe" style="cursor: pointer;">Xóa công thức</span>
                    </div>
                }
            </div>
        </nav>
    </div>
</div>
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8 the-one-div">
        @if (Model.Image != null && Model.Image.Trim().Length > 0)
        {

            <div class="fill">
                <img src="~/images/fromUsers/@Model.Image" height="200" alt="Recipe Image" id="recipeImage">
            </div>
        }
        <div class="section">
            <div class="form-group" style="display:inline">
                <span asp-for="Name" id="nameBox">@Model.Name</span>
            </div>
            <div style="float:right; display:inline">
                <img src="~/images/AddToCollection.png" height="50" alt="Add To Collection" class="addToColl">
            </div>
            <div class="form-group">
                <span id="descriptionBox" asp-for="Description"></span>
            </div>
            <hr />
            <div class="center">
                <div>&#9201; @Model.Duration</div>
            </div>
            <hr />
        </div>
        <div class="section">
            <div class="tableTitle">Nguyên liệu</div>
            @foreach (var item in Model.Ingredients)
            {
                <div>@item.Text</div>
                <hr />
            }
        </div>
        <div class="section">
            <div class="tableTitle">Các bước</div>
            @foreach (var item in Model.Steps)
            {
                <div class="step-div">
                    <img src="~/images/fork-knife.png" class="step-icon" />
                    <span>. @item.Text</span>
                    @if (item.Image != null && item.Image.Trim().Length > 0)
                    {
                        <img class="step-img" src="~/images/fromUsers/@item.Image" />
                    }
                </div>

            }
        </div>
        <hr />
        <div class="section">
            <div class="row">
                <a href="#/" id="reaction-toggle" class="reaction-toggle" data-toggle="modal" data-target="#react-list-modal"></a>
            </div>
            <div class="row flex-row px-3">
                <button type="button" id="heart-react-btn" class="react-btn">
                    <span><img width="20" src="~/images/heart-reaction.png"></span>
                    <span id="heart-react-count"></span>
                </button>
                <button type="button" id="yummy-react-btn" class="react-btn">
                    <span><img width="20" src="~/images/yummy-reaction.png"></span>
                    <span id="yummy-react-count"></span>
                </button>
                <button type="button" id="clap-react-btn" class="react-btn">
                    <span><img width="20" src="~/images/clap-reaction.png"></span>
                    <span id="clap-react-count"></span>
                </button>
            </div>
        </div>
        <hr />
        <div class="section">
            <div class="tableTitle"><i style="margin-right:10px" class="fa-regular fa-message"></i>Bình luận</div>
            <div class="row flex-row align-items-center" id="comment-box">
                <div class="col-md-10">
                    <textarea rows="1" id="comment-input" class="comment-input textarea form-rounded" role="textbox" contenteditable></textarea>
                </div>
                <button class="comment-post-btn float-right btn" type="button">Post</button>

            </div>
            <div id="comment-section" class="ui comment">

                @foreach (var comment in ViewBag.Comments)
                {
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-10">
                                <div class="d-flex px-3 py-4">
                                    <div class="flex-shrink-0">
                                        <div class="avatar avatar-sm rounded-circle">
                                            <img class="avatar-img" src="/images/@comment.User.Avatar" alt="">
                                        </div>
                                    </div>
                                    <div class="ms-2 ms-md-8 comment-content">
                                        <div class="d-flex align-items-baseline">
                                            <h6 class="me-2">@comment.User.Name</h6>
                                        </div>
                                        <div class="commentId">@comment.CommentId</div>
                                        <div id="comment-content-@comment.CommentId">@comment.Text</div>
                                        <div>
                                            <a href="#/" id="reply-to-@comment.CommentId" class="reply">Reply</a>
                                        </div>
                                        @if (comment.NumberOfReplies > 0)
                                        {
                                            <div>
                                                <a class="show-replies" href="#/"><i class="fa-solid fa-angle-down"></i><b>Show @comment.NumberOfReplies replies</b></a>
                                            </div>
                                        }
                                        <div class="replies-section" id="replies-section-@comment.CommentId"></div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-2 dropdown-section">
                                <span class="clickable delCmt" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</span>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    @if (ViewData["userId"] != null && (int)ViewData["userId"] == comment.User.UserId)
                                    {
                                        <div class="delCmt" id="del-comment-@comment.CommentId">Xóa bình luận</div>
                                        <div class="editCmt" id="edit-comment-@comment.CommentId">Sửa bình luận</div>
                                    }

                                    <div class="reportCmt" id="report-comment-@comment.CommentId">Báo cáo bình luận</div>

                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>
        <div class="modal" data-backdrop="false" id="react-list-modal" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content border-0">
                    <div class="modal-header border-0 p-0">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="padding: 0">
                        <div role="tabpanel">
                            <!-- Nav tabs -->
                            <ul class="nav nav-tabs" role="tablist">
                                <li role="presentation" class="nav-item active">
                                    <a href="#heart-list" aria-controls="uploadTab" role="tab" data-toggle="tab">
                                        <span><img width="20" src="~/images/heart-reaction.png"></span>
                                        <span id="heart-react-count1"></span>
                                    </a>
                                </li>
                                <li role="presentation" class="nav-item">
                                    <a href="#yummy-list" aria-controls="browseTab" role="tab" data-toggle="tab">
                                        <span><img width="20" src="~/images/yummy-reaction.png"></span>
                                        <span id="yummy-react-count1"></span>
                                    </a>
                                </li>
                                <li role="presentation" class="nav-item">
                                    <a href="#clap-list" aria-controls="browseTab" role="tab" data-toggle="tab">
                                        <span><img width="20" src="~/images/clap-reaction.png"></span>
                                        <span id="clap-react-count1"></span>
                                    </a>
                                </li>
                            </ul>
                            <!-- Tab panes -->
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane active" id="heart-list"></div>
                                <div role="tabpanel" class="tab-pane" id="yummy-list"></div>
                                <div role="tabpanel" class="tab-pane" id="clap-list"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="modal" id="report-modal">
            <div class="modal-content" id="report-modal-content">
                <span class="close" id="report-modal-close">&times;</span>
                <p>Báo cáo comment này?</p>
                <input type="number" class="reportCommentIdTxt" id="reportCommentId" style="display:none">
                <div class="form-group">
                    <label for="Title">Hãy nêu lí do tại sao bạn báo cáo comment này.</label>
                    <input type="text" name="" id="reportText" class="form-control">
                </div>
                <div class="text-center panel-body">
                    <button type="submit" class="btn btn-sm btn-primary" id="ReportButton">Báo cáo comment</button>
                </div>
            </div>
        </div>
        <div class="modal" id="coll-modal">
            <div class="modal-content" id="coll-modal-content">
                <span class="close" id="coll-modal-close">&times;</span>
                <p>Add to a Collection</p>
                <table cellspacing="0" cellpadding="0" style="border: none;">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div style="display:none" id="recipe-id">@Model.RecipeId</div>
    </div>
</div>
<script src="~/js/reactions.js"></script>
<script type="text/javascript">
    $("#edit-btn").on("click", function () {
        window.location.href = "/Recipes/Edit/" + @Model.RecipeId;
    });
    
       
        $("#delete-recipe").on("click", function () {
        if (confirm("Do you really want to delete this recipe?")) {

            $.ajax({
                url: "https://localhost:5001/api/Recipes/" + @Model.RecipeId,
                type: "delete",
            
                contentType: "application/json",
                success: function (result, status, xhr) {
                    window.location.href = "/Home/Index";
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                }
            });
        }
    });
    

    $(document).ready(function () {
        if (!'@ViewData["userId"]') {
            $("#comment-input").prop('disabled', true);
            $(".comment-post-btn").prop('disabled', true);
            $(".reply").prop('disabled', true);
            $(".reply").hide();
            $(".delCmt").prop('disabled', true);
            $(".delCmt").hide();
            $(".react-btn").prop('disabled', true);
        }
        if ('@ViewData["userId"]') {
            GetCurrentUserReact('@ViewData["userId"]', $("#recipe-id").text());
        }
    });

    $(".react-btn").on("click", function () {
        var newReactionType;
        if ($(this).attr("id") == "heart-react-btn") {
            newReactionType = 0;
        }
        if ($(this).attr("id") == "yummy-react-btn") {
            newReactionType = 1;
        }
        if ($(this).attr("id") == "clap-react-btn") {
            newReactionType = 2;
        }
        console.log("new type" + newReactionType);
        var oldReactionType;
        $.ajax({
            url: "https://localhost:5001/api/Reactions/getByUserAndRecipe/" + $("#recipe-id").text() + "/" + '@ViewData["userId"]',
            method: 'get',
            contentType: "application/json",
            statusCode: {
                404: function () {
                    var postJson = {
                        userId: '@ViewData["userId"]',
                        recipeId: $("#recipe-id").text(),
                        reactionType: newReactionType
                    };
                    $.ajax({
                        url: "https://localhost:5001/api/Reactions",
                        method: 'post',
                        contentType: "application/json",
                        headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                        data: JSON.stringify(postJson),
                        success: function (result, status, xhr) {
                            switch (postJson.reactionType) {
                                case 0:
                                    $("#heart-react-btn").addClass("react-btn-active");
                                    break;
                                case 1:
                                    $("#yummy-react-btn").addClass("react-btn-active");
                                    break;
                                case 2:
                                    $("#clap-react-btn").addClass("react-btn-active");
                                    break;
                            }
                            getReactionsCount();
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                        }
                    });
                }
            },
            success: function (result, status, xhr) {
                oldReactionType = result["reactionType"];
                console.log('old type' + oldReactionType);
                var json = {
                    userId: result["userId"],
                    recipeId: result["recipeId"],
                    reactionType: oldReactionType
                };
                if (oldReactionType != newReactionType) {
                    json.reactionType = newReactionType;
                    $.ajax({
                        url: "https://localhost:5001/api/Reactions",
                        method: 'put',
                        headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                        contentType: "application/json",
                        data: JSON.stringify(json),
                        success: function (result, status, xhr) {
                            switch (oldReactionType) {
                                case 0:
                                    $("#heart-react-btn").attr("class", "react-btn");
                                    break;
                                case 1:
                                    $("#yummy-react-btn").attr("class", "react-btn");
                                    break;
                                case 2:
                                    $("#clap-react-btn").attr("class", "react-btn");
                                    break;
                            }
                            switch (newReactionType) {
                                case 0:
                                    $("#heart-react-btn").addClass("react-btn-active");
                                    break;
                                case 1:
                                    $("#yummy-react-btn").addClass("react-btn-active");
                                    break;
                                case 2:
                                    $("#clap-react-btn").addClass("react-btn-active");
                                    break;
                            }
                            getReactionsCount();
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                        }
                    });
                } else {
                    $.ajax({
                        url: "https://localhost:5001/api/Reactions",
                        method: 'delete',
                        contentType: "application/json",
                        data: JSON.stringify(json),
                        headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                        success: function (result, status, xhr) {
                            switch (json.reactionType) {
                                case 0:
                                    $("#heart-react-btn").removeClass("react-btn-active");
                                    break;
                                case 1:
                                    $("#yummy-react-btn").removeClass("react-btn-active");
                                    break;
                                case 2:
                                    $("#clap-react-btn").removeClass("react-btn-active");
                                    break;
                            }
                            getReactionsCount();
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr);
                        }
                    });
                }
                getReactionsCount();
            },
            error: function (xhr, status, error) {
                console.log(xhr);
            }
        });
        getReactionsCount();
    });

    var textarea = document.getElementById("comment-input");
    var limit = 200;

    textarea.oninput = function () {
        textarea.style.height = "";
        textarea.style.height = Math.min(textarea.scrollHeight, 300) + "px";
    };
    $("#addIngredientBtn").on("click", function () {
        console.log("clicked");
        $("#ingredientsTable").append('<tr><td><input type = "text" placeholder = "250g bột" class="form-control"/></td ><td><span class="clickable">...</span></td></tr>');
    });

</script>
@section Scripts {
    <script type="text/javascript">
        $(document).on("click", '[id^="del-comment-"]', function () {
            var comment = $(this).closest(".row");
            if (confirm("Bạn có chắc chắn muốn xóa bình luận này?") == true) {
                $.ajax({
                    url: "https://localhost:5001/api/Comments/" + $(this).attr("id").replace("del-comment-", ""),
                    method: 'delete',
                    headers: {
                        "Authorization": "Bearer @ViewData["token"]"
                    },
                    contentType: "application/json",
                    success: function (result, status, xhr) {
                        $(comment).hide();
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr);
                    }
                });
            }

        });

        $(".show-replies").on("click", function () {
            var repliesSection = $(this).parent().next();
            var commentid = $(this).parent().parent().find("div:nth-child(2)").text();
            var htmlContent = "";
            $.ajax({
                url: "https://localhost:5001/api/Comments/getByComment/" + commentid,
                type: "get",
                contentType: "application/json; charset=utf-8",
                success: function (result, status, xhr) {
                    $.each(result, function (index, value) {
                        htmlContent += `<div class="row"><div class="col-lg-10">
                                                    <div class="d-flex">
                                                        <div class="flex-shrink-0">
                                                            <div class="avatar avatar-sm rounded-circle">
                                                                <img class="avatar-img" src="/images/` + value["user"]["avatar"] + `" alt="">
                                                            </div>
                                                        </div>
                                                        <div class="flex-grow-1 comment-content">
                                                            <div class="d-flex align-items-baseline">
                                                                <h6 class="me-2">` + value["user"]["name"] + `</h6>
                                                            </div>
                                                <div class="commentId">` + value["commentId"] + `</div>

                                                            <div id="comment-content-` + value["commentId"] + `">` +
                            value["text"]
                            + `</div>
<div>
                                                        <a href="#/" class="reply" id="reply-to-` + value["commentId"] + `">Reply</a>`;
                        if (result["numberOfReplies"] > 0) {
                            htmlContent += `<div>

                                                            <a class="show-replies" href="#/"><i class="fa-solid fa-angle-down"></i><b>Show ` + result["numberOfReplies"] + ` replies</b></a>

                                                            </div>`
                        }

                        htmlContent += `<div class="replies-section"  id="replies-section-` + value["commentId"] + `"></div>
                                                    </div>
                                                        </div></div>
                                                    </div>
                                        <div class="col-lg-2 dropdown-section">
                                <span class="clickable delCmt" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</span>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">`;
                                    if ('@ViewData["userId"]' == value["user"]["userId"])
                                    {
                                        htmlContent +=
                                        `<div class="delCmt" id="del-comment-` + value["commentId"] +`">Xóa bình luận</div>
                                        <div class="editCmt" id="edit-comment-` + value["commentId"] +`">Sửa bình luận</div>`
                                    }

                    htmlContent +=  `<div class="reportCmt" id="report-comment-` + value["commentId"] +`">Báo cáo bình luận</div>

                                </div>
                            </div>
                                                    </div>`;
                        $("<div>").addClass("container").html(htmlContent);
                        repliesSection.html(htmlContent);
                        if (!'@ViewData["userId"]') {
                            $(".reply").prop('disabled', true);
                            $(".reply").hide();
                            $(".delCmt").prop('disabled', true);
                            $(".delCmt").hide();
                        }
                    });

                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
            $(this).hide();

        });

        $(".comment-post-btn").on("click", function () {
            var textvalue = $("#comment-input").val();
            if (textvalue) {
                var json = {
                    userId: '@ViewData["userId"]',
                    recipeId: $("#recipe-id").text(),
                    parentCommentId: null,
                    text: textvalue,
                    commentStatus: 0
                };
                console.log(json);
                var htmlContent = "";
                $.ajax({
                    url: "https://localhost:5001/api/Comments",
                    type: "post",
                    headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (result, status, xhr) {
                        htmlContent += `<div class="row">
                                        <div class="col-lg-10">

                                                <div class="d-flex px-3 py-4 border border-bottom-0 border-light rounded-top border-left">
                                                        <div class="flex-shrink-0">
                                                            <div class="avatar avatar-sm rounded-circle">
                                                                <img class="avatar-img" src="/images/` + result["user"]["avatar"] + `" alt="">
                                                            </div>
                                                        </div>
                                                        <div class="flex-grow-1 comment-content">
                                                            <div class="d-flex align-items-baseline">
                                                                <h6 class="me-2">` + result["user"]["name"] + `</h6>
                                                            </div>
                                                            <div class="commentId">` + result["commentId"] + `</div>
                                                            <div>` +
                            result["text"]
                            + `</div>
<div>
                                                        <a href="#" class="reply">Reply</a>
                                                </div>
                                                            </div> </div></div>
                                    <div class="col-lg-2 dropdown-section">
                                <span class="clickable delCmt" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</span>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <div class="delCmt" id="del-comment-` + result["commentId"] + `">Xóa bình luận</div>
                                        <div class="editCmt" id="edit-comment-` + result["commentId"] +`">Sửa bình luận</div>
                                        <div class="reportCmt" id="report-comment-` + result["commentId"] +`">Báo cáo bình luận</div>

                                </div>
                            </div>
                                                        </div>`;
                        $("<div>").addClass("container").html(htmlContent).appendTo($("#comment-section"));
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr);
                    }
                });
                $(this).parent().find("div:nth-child(2)").find(":first-child").val("");
            }

        });


        var commentContent;
        $(document).on("click", '[id^="edit-comment-"]', function () {
            var id = $(this).attr("id").replace("edit-comment-", "");
            var commentBox = $("#comment-content-" + id);
            commentContent = $("#comment-content-" + id).text();
            var htmlContent = `<div class="row flex-row align-items-center" id="comment-box">

                <div class="">
                    <textarea rows="1" id="comment-input-` + id+ `" class="comment-input textarea form-rounded" role="textbox" contenteditable>` + $("#comment-content-" + id).text() + `</textarea>
                </div>
                <button id="comment-edit-`+ id +`" class="comment-post-btn float-left btn" type="button">Post</button>
                <button id="comment-cancel-`+ id +`" class="comment-cancel-btn float-right btn" type="button">Cancel</button>
            </div>`;
            commentBox.html(htmlContent);

        });

        $(document).on("click", '[id^="comment-edit-"]', function () {
            var id = $(this).attr("id").replace("comment-edit-", "");
            var textContent = $("#comment-input-" + id).val();
            var json = {
                text: $("#comment-input-" + id).val(),
            };
            var commentBox = $("#comment-content-" + id);

            $.ajax({
                url: "https://localhost:5001/api/Comments/" + id,
                method: "put",
                contentType: "application/json; charset=utf-8",
                headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                data: JSON.stringify(json),
                success: function (result, status, xhr) {
                    commentBox.html(textContent);
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
        });

        $(document).on("click", '[id^="comment-cancel-"]', function () {
            var id = $(this).attr("id").replace("comment-cancel-", "");
            var commentBox = $("#comment-content-" + id);

            commentBox.html(commentContent);
        });

        $(document).on("click", '[id^="reply-to-"]', function () {
            var id = $(this).attr("id").replace("reply-to-", "");
            var commentbox = $("#comment-content-" + id).closest(".row").parent();

            var htmlContent = `<div>

                <div class="row">
                    <textarea rows="1" id="reply-input-` + id + `" class="comment-input textarea form-rounded" role="textbox" contenteditable></textarea>
                </div>
                </div>
            <div class="row flex-row">
                <button id="reply-post-`+ id + `" class="comment-post-btn float-left btn" type="button">Post</button>
                <button id="reply-cancel-`+ id + `" class="comment-cancel-btn float-right btn" type="button">Cancel</button>
            </div>`;
            $("<div>").attr("id", "reply-box-" + id).attr("class", "reply-box").html(htmlContent).appendTo(commentbox);
        });

        $(document).on("click", '[id^="reply-cancel-"]', function () {
            var id = $(this).attr("id").replace("reply-cancel-", "");
            var commentBox = $("#reply-box-" + id);
            $(commentBox).hide();
        });

        $(document).on("click", '[id^="reply-post-"]', function () {
            var id = $(this).attr("id").replace("reply-post-", "");
            var replyContent = $("#reply-input-" + id);
            var json = {
                userId: '@ViewData["userId"]',
                recipeId: $("#recipe-id").text(),
                parentCommentId: id,
                text: replyContent.val(),
                commentStatus: 0
            };
            var htmlContent = "";
            console.log(json);
            $.ajax({
                url: "https://localhost:5001/api/Comments",
                type: "post",
                contentType: "application/json; charset=utf-8",
                headers: {
                            "Authorization": "Bearer @ViewData["token"]"
                        },
                data: JSON.stringify(json),
                success: function (result, status, xhr) {
                    htmlContent += `<div class="row">
                                        <div class="col-lg-10">
                                                <div class="d-flex px-3 py-4 border border-bottom-0 border-light rounded-top border-left">
                                                        <div class="flex-shrink-0">
                                                            <div class="avatar avatar-sm rounded-circle">
                                                                <img class="avatar-img" src="/images/` + result["user"]["avatar"] + `" alt="">
                                                            </div>
                                                        </div>
                                                        <div class="flex-grow-1 comment-content">
                                                            <div class="d-flex align-items-baseline">
                                                                <h6 class="me-2">` + result["user"]["name"] + `</h6>
                                                            </div>
                                                            <div class="commentId">` + result["commentId"] + `</div>
                                                            <div>` +
                        result["text"]
                        + `</div>
<div>
                                                        <a href="#" class="reply">Reply</a>
                                                </div>
                                                            </div> </div></div>
                                    <div class="col-lg-2 dropdown-section">
                                <span class="clickable delCmt" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">...</span>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <div class="delCmt" id="del-comment-` + result["commentId"] + `">Xóa bình luận</div>
                                        <div class="editCmt" id="edit-comment-` + result["commentId"] + `">Sửa bình luận</div>
                                        <div class="reportCmt" id="report-comment-` + result["commentId"] + `">Báo cáo bình luận</div>

                                </div>
                            </div>
                                                        </div>`;
                    $("<div>").addClass("container").html(htmlContent).appendTo($("#replies-section-" + id));
                    $("#reply-box-" + id).hide();
                },
                error: function (xhr, status, error) {
                    console.log(xhr);
                }
            });
        });

        $(document).on("click", '[id^="report-comment-"]', function () {
          var commentidtxt = $('.reportCommentIdTxt');
          var modal = $("#report-modal");
          var btn = $('.reportCmt');
          var span = $("#report-modal-close");
          var commentid = $(this).attr("id").replace("report-comment-", "");

          $("#reportCommentId").val(commentid);

            modal.show();

          span.click(function () {
            modal.hide();
          });

          $(window).on('click', function (e) {
            if ($(e.target).is("#report-modal")) {
              modal.hide();
            }
          });
        });
        $(document).ready(function () {
          var modal = $("#coll-modal");
          var btn = $('.addToColl');
          var span = $("#coll-modal-close");

          btn.click(function () {
            modal.show();
          });

          span.click(function () {
            modal.hide();
          });

          $(window).on('click', function (e) {
            if ($(e.target).is("#coll-modal")) {
              modal.hide();
            }
          });
        });

        $("#ReportButton").click(function(e) {
            data = new FormData();
            data.append("CommentId", $("#reportCommentId").val());
            data.append("Text", $("#reportText").val());
            var object = {};
            data.forEach((value, key) => object[key] = value);
            console.log(JSON.stringify(object))
            $.ajax({
                url: "https://localhost:5001/api/Comments/reportComment" + "/" + $("#reportCommentId").val(),
                type: "post",
                data: JSON.stringify(object),
                contentType: "application/json",
                success: function(result, status, xhr) {
                    console.log(status);
                    var modal = $("#report-modal");
                    modal.hide();
                },
                error: function(xhr, status, error) {
                    console.log(xhr);
                }
            });
        });

        $("table tbody").html("");
            $.ajax({
                url: "https://localhost:5001/api/Collections/getByUser/" + @ViewData["userId"] + "/" + @Model.RecipeId,
                type: "get",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function(result, status, xhr) {
                    $.each(result, function(index, value) {
                        $("tbody").append($("<tr>"));
                        appendElement = $("tbody tr").last();
                        appendElement.append($("<td>"));
                        buttonElement = $("tbody td").last();
                        buttonElement.append($("<button style='margin:5px' class='btn btn-sm btn-primary' id='addcoll-" + value["collectionId"] + "'>").html(value["name"]));
                        appendElement.append($("<td>").html(value["description"]));

                    });
                },
                error: function(xhr, status, error) {
                    console.log(xhr);
                }

            });
            $(document).on("click", '[id^="addcoll-"]', function () {
                data = new FormData();
                data.append("CollectionId", $(this).attr("id").replace("addcoll-", ""));
                data.append("RecipeId", @Model.RecipeId);
                var object = {};
                data.forEach((value, key) => object[key] = value);
                console.log(JSON.stringify(object))
                $.ajax({
                    url: "https://localhost:5001/api/Recipes/addToCollection/",
                    type: "post",
                    data: JSON.stringify(object),
                    contentType: "application/json",
                    success: function(result, status, xhr) {
                        console.log(status);
                        var modal = $("#coll-modal");
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        console.log(xhr);
                    }
                });
            });
    </script>
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            padding-top: 100px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, .4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
